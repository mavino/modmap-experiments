name: mmetsp-alveolata

experiments:
  cds: &exp_options
    expand_options:
      k: 1..11
      sample_len: [1000000, 150000, 50000, 10000, 5000]
    dataset:
      archive: mmetsp
      archive_folder: cds
      metadata: mmetsp
    groups:
      Dinophyta:
        taxonomy_contains: ['Dinophyta;']
      Ciliophora:
        taxonomy_contains: ['Ciliophora;']

  nt:
    <<: *exp_options
    dataset:
      archive: mmetsp
      archive_folder: nt
      metadata: mmetsp

steps:
  - type: select
    pick_group: |
      lambda metadata, group_options:
        # these ids are in either nt or cds but not both, we omit them entirely
        omit_ids = {{'MMETSP0133', 'MMETSP0134', 'MMETSP0135', 'MMETSP0197', 'MMETSP0399', 'MMETSP0452', 'MMETSP0923', 'MMETSP0925', 'MMETSP0705', 'MMETSP0716', 'MMETSP0719'}}
        return [x for x in metadata if any(tax_str in x['taxonomy'] for tax_str in group_options['taxonomy_contains'])
                                    and x['id'] not in omit_ids]
    postprocess: |
      lambda metadata_entry, entry_sequences:
        import numpy as np
        if {sample_len} == 'all':
          return [(metadata_entry, [''.join(entry_sequences)])]
        else:
          seq = ''
          choices = []
          random_indexes = np.random.permutation(len(entry_sequences)).tolist()
          while len(seq) < {sample_len} and len(random_indexes) > 0:
            idx = random_indexes.pop()
            choices.append(idx)
            seq += entry_sequences[idx]
          return [(dict(metadata_entry, sample_indexes=choices), [seq])]

  - type: command
    command: '"{client_dir}/generation_manhat_info" 32 {k} "{fasta_output_dir}" "{output_dir}"'
    save_files: ['manhat.matr', 'info.matr']

  - type: mds
    dists_file: info.matr
    dimensions: 10
    output_file: mds10-info.json

  - type: mds
    dists_file: manhat.matr
    dimensions: 10
    output_file: mds10-manhat.json

  - &classify_options
    type: classify
    features_type: mmg-dists
    features_file: info.matr
    output_file: classification-info.json
    validation_count: 10
    classifiers:
      - 10-nearest-neighbors
      - linear-svm
      - quadratic-svm
      #- rbf-svm # not very accurate
      - gaussian-naive-bayes
      - decision-tree
      - random-forest
      - logistic-regression
      - nearest-centroid-mean
      #- neural-network # not very accurate
      - nearest-centroid-median

  - type: classify
    features_type: mmg-dists
    features_file: manhat.matr
    output_file: classification-manhat.json
    <<: *classify_options
