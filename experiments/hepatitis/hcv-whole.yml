name: hepatitis-hcv-whole

experiments:
  subtype: &exp_options
    expand_options:
      k: 1..11
      min_group_pts: [20]
    dataset:
      archive: hcv
      archive_folder: lanl-whole
      metadata: hcv-lanl-whole
    groups: |
      lambda:
        import collections, json, os
        with open(os.path.join({metadata_dir!r}, {dataset[metadata]!r} + '.json'), 'r') as f:
          metadata = json.load(f)
        counts = collections.Counter(x['subtype'] for x in metadata)
        return {{h: {{'subtype': h + '$'}} for h in counts if h and counts[h] >= {min_group_pts}}}

  subtype-firstletter:
    <<: *exp_options
    groups: |
      lambda:
        import collections, json, os
        with open(os.path.join({metadata_dir!r}, {dataset[metadata]!r} + '.json'), 'r') as f:
          metadata = json.load(f)
        counts = collections.Counter(x['subtype'][0] for x in metadata)
        return {{h: {{'subtype': h}} for h in counts if h and counts[h] >= {min_group_pts}}}

steps:
  - type: select
    pick_group: |
      lambda metadata, group_options:
        import re
        return [x for x in metadata if re.match(group_options['subtype'], x['subtype'])]

  - type: command
    command: '"{client_dir}/generation_manhat_info" 16 {k} "{fasta_output_dir}" "{output_dir}"'
    save_files: ['manhat.matr', 'info.matr']

  - type: mds
    dists_file: info.matr
    dimensions: 10
    output_file: mds10-info.json

  - type: mds
    dists_file: manhat.matr
    dimensions: 10
    output_file: mds10-manhat.json

  - &classify_options
    type: classify
    features_type: mmg-dists
    features_file: info.matr
    output_file: classification-info.json
    validation_count: 10
    classifiers:
      - 10-nearest-neighbors
      - nearest-centroid-mean
      - nearest-centroid-median
      - logistic-regression
      - sgd
      - linear-svm
      - quadratic-svm
      - rbf-svm
      - decision-tree
      - random-forest
      - adaboost
      - gaussian-naive-bayes
      - lda
      - qda
      - multilayer-perceptron

  - type: classify
    features_type: mmg-dists
    features_file: manhat.matr
    output_file: classification-manhat.json
    <<: *classify_options
