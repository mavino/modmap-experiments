name: 1kplants

experiments:
  clades: &exp_options
    expand_options:
      k: 1..11
      sample_len: [1000000, 150000, 50000, 10000, 5000]
      samples_per_organism: [1, 10, 20]
    dataset:
      archive: 1kplants
      metadata: 1kplants
    groups:
      Eudicots:
        taxonomy_contains: ['Eudicots']
      Monocots:
        taxonomy_contains: ['Monocots']
      Ferns:
        taxonomy_contains: ['Monilophytes']
      Green Algae:
        taxonomy_contains: ['Green Algae']
      Mosses:
        taxonomy_contains: ['Mosses']
      Conifers:
        taxonomy_contains: ['Conifers']

  eudicots:
    <<: *exp_options
    groups:
      Papaveraceae:
        taxonomy_contains: ['Papaveraceae']
      Amaranthaceae:
        taxonomy_contains: ['Amaranthaceae']
      Portulacaceae:
        taxonomy_contains: ['Portulacaceae']
      Saxifragaceae:
        taxonomy_contains: ['Saxifragaceae']
      Asteraceae:
        taxonomy_contains: ['Asteraceae']
      Boraginaceae:
        taxonomy_contains: ['Boraginaceae']
      Convolvulaceae:
        taxonomy_contains: ['Convolvulaceae']
      Lamiaceae:
        taxonomy_contains: ['Lamiaceae']
      Solanaceae:
        taxonomy_contains: ['Solanaceae']
      Brassicaceae:
        taxonomy_contains: ['Brassicaceae']
      Fabaceae:
        taxonomy_contains: ['Fabaceae']
      Linaceae:
        taxonomy_contains: ['Linaceae']
      Onagraceae:
        taxonomy_contains: ['Onagraceae']
      Rosaceae:
        taxonomy_contains: ['Rosaceae']

  ferns:
    <<: *exp_options
    groups:
      Leptosporangiates:
        taxonomy_contains: ['Leptosporangiate Monilophytes']
      Eusporangiates:
        taxonomy_contains: ['Eusporangiate Monilophytes']

  greenalgae:
    <<: *exp_options
    groups:
      Chlamydomonadaceae:
        taxonomy_contains: ['Chlamydomonadaceae']
      Desmidiaceae:
        taxonomy_contains: ['Desmidiaceae']
      Mesotaeniaceae:
        taxonomy_contains: ['Mesotaeniaceae']

  conifers:
    <<: *exp_options
    groups:
      Cupressaceae:
        taxonomy_contains: ['Cupressaceae']
      Pinaceae:
        taxonomy_contains: ['Pinaceae']
      Podocarpaceae:
        taxonomy_contains: ['Podocarpaceae']

steps:
  - type: select
    pick_group: |
      lambda metadata, group_options:
        return [x for x in metadata if any(tax_str in x['taxonomy'] for tax_str in group_options['taxonomy_contains'])]
    postprocess: |
      lambda metadata_entry, entry_sequences:
        import numpy as np
        if {sample_len} == 'all':
          return [(metadata_entry, [''.join(entry_sequences)])]
        else:
          samples = []
          for _ in range({samples_per_organism}):
            seq = ''
            choices = []
            random_indexes = np.random.permutation(len(entry_sequences)).tolist()
            while len(seq) < {sample_len} and len(random_indexes) > 0:
              idx = random_indexes.pop()
              choices.append(idx)
              seq += entry_sequences[idx]
            samples.append((dict(metadata_entry, sample_indexes=choices), [seq]))
          return samples

  - type: command
    command: '"{client_dir}/generation_manhat_info" 32 {k} "{fasta_output_dir}" "{output_dir}"'
    save_files: ['manhat.matr', 'info.matr']

  - type: mds
    dists_file: info.matr
    dimensions: 10
    output_file: mds10-info.json

  - type: mds
    dists_file: manhat.matr
    dimensions: 10
    output_file: mds10-manhat.json

  - &classify_options
    type: classify
    features_type: mmg-dists
    features_file: info.matr
    output_file: classification-info.json
    validation_count: 10
    classifiers:
      - 10-nearest-neighbors
      - nearest-centroid-mean
      - nearest-centroid-median
      - logistic-regression
      - sgd
      - linear-svm
      - quadratic-svm
      - rbf-svm
      - decision-tree
      - random-forest
      - adaboost
      - gaussian-naive-bayes
      - lda
      - qda
      - multilayer-perceptron

  - type: classify
    features_type: mmg-dists
    features_file: manhat.matr
    output_file: classification-manhat.json
    <<: *classify_options
